// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: gleam.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ////////////////////////////////////////////////
type ComputeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataCenter       string             `protobuf:"bytes,1,opt,name=data_center,json=dataCenter,proto3" json:"data_center,omitempty"`
	ComputeResources []*ComputeResource `protobuf:"bytes,2,rep,name=compute_resources,json=computeResources,proto3" json:"compute_resources,omitempty"`
	Username         string             `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Hostname         string             `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	FlowHashCode     uint32             `protobuf:"varint,5,opt,name=flowHashCode,proto3" json:"flowHashCode,omitempty"`
}

func (x *ComputeRequest) Reset() {
	*x = ComputeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeRequest) ProtoMessage() {}

func (x *ComputeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeRequest.ProtoReflect.Descriptor instead.
func (*ComputeRequest) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{0}
}

func (x *ComputeRequest) GetDataCenter() string {
	if x != nil {
		return x.DataCenter
	}
	return ""
}

func (x *ComputeRequest) GetComputeResources() []*ComputeResource {
	if x != nil {
		return x.ComputeResources
	}
	return nil
}

func (x *ComputeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ComputeRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ComputeRequest) GetFlowHashCode() uint32 {
	if x != nil {
		return x.FlowHashCode
	}
	return 0
}

type ComputeResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuCount int32 `protobuf:"varint,1,opt,name=cpu_count,json=cpuCount,proto3" json:"cpu_count,omitempty"`
	CpuLevel int32 `protobuf:"varint,2,opt,name=cpu_level,json=cpuLevel,proto3" json:"cpu_level,omitempty"`
	GpuCount int32 `protobuf:"varint,3,opt,name=gpu_count,json=gpuCount,proto3" json:"gpu_count,omitempty"`
	GpuLevel int32 `protobuf:"varint,4,opt,name=gpu_level,json=gpuLevel,proto3" json:"gpu_level,omitempty"`
	MemoryMb int64 `protobuf:"varint,5,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	DiskMb   int64 `protobuf:"varint,6,opt,name=disk_mb,json=diskMb,proto3" json:"disk_mb,omitempty"`
}

func (x *ComputeResource) Reset() {
	*x = ComputeResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeResource) ProtoMessage() {}

func (x *ComputeResource) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeResource.ProtoReflect.Descriptor instead.
func (*ComputeResource) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{1}
}

func (x *ComputeResource) GetCpuCount() int32 {
	if x != nil {
		return x.CpuCount
	}
	return 0
}

func (x *ComputeResource) GetCpuLevel() int32 {
	if x != nil {
		return x.CpuLevel
	}
	return 0
}

func (x *ComputeResource) GetGpuCount() int32 {
	if x != nil {
		return x.GpuCount
	}
	return 0
}

func (x *ComputeResource) GetGpuLevel() int32 {
	if x != nil {
		return x.GpuLevel
	}
	return 0
}

func (x *ComputeResource) GetMemoryMb() int64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *ComputeResource) GetDiskMb() int64 {
	if x != nil {
		return x.DiskMb
	}
	return 0
}

type DataResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Size     int64     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *DataResource) Reset() {
	*x = DataResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataResource) ProtoMessage() {}

func (x *DataResource) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataResource.ProtoReflect.Descriptor instead.
func (*DataResource) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{2}
}

func (x *DataResource) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *DataResource) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataCenter string `protobuf:"bytes,1,opt,name=data_center,json=dataCenter,proto3" json:"data_center,omitempty"`
	Rack       string `protobuf:"bytes,2,opt,name=rack,proto3" json:"rack,omitempty"`
	Server     string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	Port       int32  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{3}
}

func (x *Location) GetDataCenter() string {
	if x != nil {
		return x.DataCenter
	}
	return ""
}

func (x *Location) GetRack() string {
	if x != nil {
		return x.Rack
	}
	return ""
}

func (x *Location) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *Location) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Allocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location  *Location        `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Allocated *ComputeResource `protobuf:"bytes,2,opt,name=allocated,proto3" json:"allocated,omitempty"`
}

func (x *Allocation) Reset() {
	*x = Allocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Allocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Allocation) ProtoMessage() {}

func (x *Allocation) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Allocation.ProtoReflect.Descriptor instead.
func (*Allocation) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{4}
}

func (x *Allocation) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Allocation) GetAllocated() *ComputeResource {
	if x != nil {
		return x.Allocated
	}
	return nil
}

type AllocationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allocations []*Allocation `protobuf:"bytes,1,rep,name=allocations,proto3" json:"allocations,omitempty"`
}

func (x *AllocationResult) Reset() {
	*x = AllocationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationResult) ProtoMessage() {}

func (x *AllocationResult) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationResult.ProtoReflect.Descriptor instead.
func (*AllocationResult) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{5}
}

func (x *AllocationResult) GetAllocations() []*Allocation {
	if x != nil {
		return x.Allocations
	}
	return nil
}

// ////////////////////////////////////////////////
type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location  *Location        `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Resource  *ComputeResource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Allocated *ComputeResource `protobuf:"bytes,3,opt,name=allocated,proto3" json:"allocated,omitempty"`
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{6}
}

func (x *Heartbeat) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Heartbeat) GetResource() *ComputeResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Heartbeat) GetAllocated() *ComputeResource {
	if x != nil {
		return x.Allocated
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{7}
}

// ////////////////////////////////////////////////
type DataLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Location *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	OnDisk   bool      `protobuf:"varint,3,opt,name=onDisk,proto3" json:"onDisk,omitempty"`
}

func (x *DataLocation) Reset() {
	*x = DataLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataLocation) ProtoMessage() {}

func (x *DataLocation) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataLocation.ProtoReflect.Descriptor instead.
func (*DataLocation) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{8}
}

func (x *DataLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataLocation) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *DataLocation) GetOnDisk() bool {
	if x != nil {
		return x.OnDisk
	}
	return false
}

// ////////////////////////////////////////////////
type FlowExecutionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StepGroups    []*FlowExecutionStatus_StepGroup    `protobuf:"bytes,1,rep,name=stepGroups,proto3" json:"stepGroups,omitempty"`
	TaskGroups    []*FlowExecutionStatus_TaskGroup    `protobuf:"bytes,2,rep,name=taskGroups,proto3" json:"taskGroups,omitempty"`
	Datasets      []*FlowExecutionStatus_Dataset      `protobuf:"bytes,3,rep,name=datasets,proto3" json:"datasets,omitempty"`
	DatasetShards []*FlowExecutionStatus_DatasetShard `protobuf:"bytes,4,rep,name=datasetShards,proto3" json:"datasetShards,omitempty"`
	Tasks         []*FlowExecutionStatus_Task         `protobuf:"bytes,5,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Steps         []*FlowExecutionStatus_Step         `protobuf:"bytes,6,rep,name=steps,proto3" json:"steps,omitempty"`
	Id            uint32                              `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	Driver        *FlowExecutionStatus_DriverInfo     `protobuf:"bytes,8,opt,name=driver,proto3" json:"driver,omitempty"`
	Error         string                              `protobuf:"bytes,9,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *FlowExecutionStatus) Reset() {
	*x = FlowExecutionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowExecutionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowExecutionStatus) ProtoMessage() {}

func (x *FlowExecutionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowExecutionStatus.ProtoReflect.Descriptor instead.
func (*FlowExecutionStatus) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{9}
}

func (x *FlowExecutionStatus) GetStepGroups() []*FlowExecutionStatus_StepGroup {
	if x != nil {
		return x.StepGroups
	}
	return nil
}

func (x *FlowExecutionStatus) GetTaskGroups() []*FlowExecutionStatus_TaskGroup {
	if x != nil {
		return x.TaskGroups
	}
	return nil
}

func (x *FlowExecutionStatus) GetDatasets() []*FlowExecutionStatus_Dataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

func (x *FlowExecutionStatus) GetDatasetShards() []*FlowExecutionStatus_DatasetShard {
	if x != nil {
		return x.DatasetShards
	}
	return nil
}

func (x *FlowExecutionStatus) GetTasks() []*FlowExecutionStatus_Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *FlowExecutionStatus) GetSteps() []*FlowExecutionStatus_Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *FlowExecutionStatus) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlowExecutionStatus) GetDriver() *FlowExecutionStatus_DriverInfo {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *FlowExecutionStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type FileResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dir          string `protobuf:"bytes,2,opt,name=dir,proto3" json:"dir,omitempty"`
	Hash         uint32 `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	FlowHashCode uint32 `protobuf:"varint,4,opt,name=flowHashCode,proto3" json:"flowHashCode,omitempty"`
	Content      []byte `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *FileResourceRequest) Reset() {
	*x = FileResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResourceRequest) ProtoMessage() {}

func (x *FileResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResourceRequest.ProtoReflect.Descriptor instead.
func (*FileResourceRequest) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{10}
}

func (x *FileResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileResourceRequest) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *FileResourceRequest) GetHash() uint32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

func (x *FileResourceRequest) GetFlowHashCode() uint32 {
	if x != nil {
		return x.FlowHashCode
	}
	return 0
}

func (x *FileResourceRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type FileResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlreadyExists bool `protobuf:"varint,1,opt,name=alreadyExists,proto3" json:"alreadyExists,omitempty"`
	Ok            bool `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *FileResourceResponse) Reset() {
	*x = FileResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResourceResponse) ProtoMessage() {}

func (x *FileResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResourceResponse.ProtoReflect.Descriptor instead.
func (*FileResourceResponse) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{11}
}

func (x *FileResourceResponse) GetAlreadyExists() bool {
	if x != nil {
		return x.AlreadyExists
	}
	return false
}

func (x *FileResourceResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstructionSet *InstructionSet  `protobuf:"bytes,1,opt,name=instructionSet,proto3" json:"instructionSet,omitempty"`
	Dir            string           `protobuf:"bytes,2,opt,name=dir,proto3" json:"dir,omitempty"`
	Resource       *ComputeResource `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *ExecutionRequest) Reset() {
	*x = ExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionRequest) ProtoMessage() {}

func (x *ExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionRequest.ProtoReflect.Descriptor instead.
func (*ExecutionRequest) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{12}
}

func (x *ExecutionRequest) GetInstructionSet() *InstructionSet {
	if x != nil {
		return x.InstructionSet
	}
	return nil
}

func (x *ExecutionRequest) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *ExecutionRequest) GetResource() *ComputeResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output        []byte         `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Error         []byte         `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	SystemTime    float64        `protobuf:"fixed64,3,opt,name=systemTime,proto3" json:"systemTime,omitempty"`
	UserTime      float64        `protobuf:"fixed64,4,opt,name=userTime,proto3" json:"userTime,omitempty"`
	ExecutionStat *ExecutionStat `protobuf:"bytes,5,opt,name=executionStat,proto3" json:"executionStat,omitempty"`
}

func (x *ExecutionResponse) Reset() {
	*x = ExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionResponse) ProtoMessage() {}

func (x *ExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionResponse.ProtoReflect.Descriptor instead.
func (*ExecutionResponse) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{13}
}

func (x *ExecutionResponse) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *ExecutionResponse) GetError() []byte {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ExecutionResponse) GetSystemTime() float64 {
	if x != nil {
		return x.SystemTime
	}
	return 0
}

func (x *ExecutionResponse) GetUserTime() float64 {
	if x != nil {
		return x.UserTime
	}
	return 0
}

func (x *ExecutionResponse) GetExecutionStat() *ExecutionStat {
	if x != nil {
		return x.ExecutionStat
	}
	return nil
}

type ExecutionStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowHashCode uint32             `protobuf:"varint,1,opt,name=flowHashCode,proto3" json:"flowHashCode,omitempty"`
	Stats        []*InstructionStat `protobuf:"bytes,2,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *ExecutionStat) Reset() {
	*x = ExecutionStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStat) ProtoMessage() {}

func (x *ExecutionStat) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStat.ProtoReflect.Descriptor instead.
func (*ExecutionStat) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{14}
}

func (x *ExecutionStat) GetFlowHashCode() uint32 {
	if x != nil {
		return x.FlowHashCode
	}
	return 0
}

func (x *ExecutionStat) GetStats() []*InstructionStat {
	if x != nil {
		return x.Stats
	}
	return nil
}

type InstructionStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StepId        int32 `protobuf:"varint,1,opt,name=stepId,proto3" json:"stepId,omitempty"`
	TaskId        int32 `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`
	InputCounter  int64 `protobuf:"varint,3,opt,name=inputCounter,proto3" json:"inputCounter,omitempty"`
	OutputCounter int64 `protobuf:"varint,4,opt,name=outputCounter,proto3" json:"outputCounter,omitempty"`
}

func (x *InstructionStat) Reset() {
	*x = InstructionStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstructionStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstructionStat) ProtoMessage() {}

func (x *InstructionStat) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstructionStat.ProtoReflect.Descriptor instead.
func (*InstructionStat) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{15}
}

func (x *InstructionStat) GetStepId() int32 {
	if x != nil {
		return x.StepId
	}
	return 0
}

func (x *InstructionStat) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *InstructionStat) GetInputCounter() int64 {
	if x != nil {
		return x.InputCounter
	}
	return 0
}

func (x *InstructionStat) GetOutputCounter() int64 {
	if x != nil {
		return x.OutputCounter
	}
	return 0
}

type ControlMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOnDiskIO   bool          `protobuf:"varint,1,opt,name=isOnDiskIO,proto3" json:"isOnDiskIO,omitempty"`
	ReadRequest  *ReadRequest  `protobuf:"bytes,2,opt,name=readRequest,proto3" json:"readRequest,omitempty"`
	WriteRequest *WriteRequest `protobuf:"bytes,3,opt,name=writeRequest,proto3" json:"writeRequest,omitempty"`
}

func (x *ControlMessage) Reset() {
	*x = ControlMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage) ProtoMessage() {}

func (x *ControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{16}
}

func (x *ControlMessage) GetIsOnDiskIO() bool {
	if x != nil {
		return x.IsOnDiskIO
	}
	return false
}

func (x *ControlMessage) GetReadRequest() *ReadRequest {
	if x != nil {
		return x.ReadRequest
	}
	return nil
}

func (x *ControlMessage) GetWriteRequest() *WriteRequest {
	if x != nil {
		return x.WriteRequest
	}
	return nil
}

type DeleteDatasetShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteDatasetShardRequest) Reset() {
	*x = DeleteDatasetShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDatasetShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatasetShardRequest) ProtoMessage() {}

func (x *DeleteDatasetShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatasetShardRequest.ProtoReflect.Descriptor instead.
func (*DeleteDatasetShardRequest) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteDatasetShardRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteDatasetShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteDatasetShardResponse) Reset() {
	*x = DeleteDatasetShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDatasetShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatasetShardResponse) ProtoMessage() {}

func (x *DeleteDatasetShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatasetShardResponse.ProtoReflect.Descriptor instead.
func (*DeleteDatasetShardResponse) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteDatasetShardResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CleanupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowHashCode uint32 `protobuf:"varint,1,opt,name=flowHashCode,proto3" json:"flowHashCode,omitempty"`
}

func (x *CleanupRequest) Reset() {
	*x = CleanupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupRequest) ProtoMessage() {}

func (x *CleanupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupRequest.ProtoReflect.Descriptor instead.
func (*CleanupRequest) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{19}
}

func (x *CleanupRequest) GetFlowHashCode() uint32 {
	if x != nil {
		return x.FlowHashCode
	}
	return 0
}

type CleanupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CleanupResponse) Reset() {
	*x = CleanupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupResponse) ProtoMessage() {}

func (x *CleanupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupResponse.ProtoReflect.Descriptor instead.
func (*CleanupResponse) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{20}
}

func (x *CleanupResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type WriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	WriterName  string `protobuf:"bytes,2,opt,name=writerName,proto3" json:"writerName,omitempty"`
	ReaderCount int32  `protobuf:"varint,3,opt,name=readerCount,proto3" json:"readerCount,omitempty"`
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{21}
}

func (x *WriteRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *WriteRequest) GetWriterName() string {
	if x != nil {
		return x.WriterName
	}
	return ""
}

func (x *WriteRequest) GetReaderCount() int32 {
	if x != nil {
		return x.ReaderCount
	}
	return 0
}

type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	ReaderName  string `protobuf:"bytes,2,opt,name=readerName,proto3" json:"readerName,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{22}
}

func (x *ReadRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ReadRequest) GetReaderName() string {
	if x != nil {
		return x.ReaderName
	}
	return ""
}

type InstructionSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instructions []*Instruction `protobuf:"bytes,1,rep,name=instructions,proto3" json:"instructions,omitempty"`
	ReaderCount  int32          `protobuf:"varint,2,opt,name=readerCount,proto3" json:"readerCount,omitempty"`
	FlowHashCode uint32         `protobuf:"varint,3,opt,name=flowHashCode,proto3" json:"flowHashCode,omitempty"`
	IsProfiling  bool           `protobuf:"varint,4,opt,name=isProfiling,proto3" json:"isProfiling,omitempty"`
	AgentAddress string         `protobuf:"bytes,5,opt,name=agentAddress,proto3" json:"agentAddress,omitempty"`
	Name         string         `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *InstructionSet) Reset() {
	*x = InstructionSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstructionSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstructionSet) ProtoMessage() {}

func (x *InstructionSet) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstructionSet.ProtoReflect.Descriptor instead.
func (*InstructionSet) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{23}
}

func (x *InstructionSet) GetInstructions() []*Instruction {
	if x != nil {
		return x.Instructions
	}
	return nil
}

func (x *InstructionSet) GetReaderCount() int32 {
	if x != nil {
		return x.ReaderCount
	}
	return 0
}

func (x *InstructionSet) GetFlowHashCode() uint32 {
	if x != nil {
		return x.FlowHashCode
	}
	return 0
}

func (x *InstructionSet) GetIsProfiling() bool {
	if x != nil {
		return x.IsProfiling
	}
	return false
}

func (x *InstructionSet) GetAgentAddress() string {
	if x != nil {
		return x.AgentAddress
	}
	return ""
}

func (x *InstructionSet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Instruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StepId                   int32                                 `protobuf:"varint,1,opt,name=stepId,proto3" json:"stepId,omitempty"`
	TaskId                   int32                                 `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`
	MemoryInMB               int32                                 `protobuf:"varint,3,opt,name=memoryInMB,proto3" json:"memoryInMB,omitempty"`
	InputShardLocations      []*DatasetShardLocation               `protobuf:"bytes,4,rep,name=inputShardLocations,proto3" json:"inputShardLocations,omitempty"`
	OutputShardLocations     []*DatasetShardLocation               `protobuf:"bytes,5,rep,name=OutputShardLocations,proto3" json:"OutputShardLocations,omitempty"`
	Select                   *Instruction_Select                   `protobuf:"bytes,6,opt,name=select,proto3" json:"select,omitempty"`
	JoinPartitionedSorted    *Instruction_JoinPartitionedSorted    `protobuf:"bytes,7,opt,name=joinPartitionedSorted,proto3" json:"joinPartitionedSorted,omitempty"`
	CoGroupPartitionedSorted *Instruction_CoGroupPartitionedSorted `protobuf:"bytes,8,opt,name=coGroupPartitionedSorted,proto3" json:"coGroupPartitionedSorted,omitempty"`
	PipeAsArgs               *Instruction_PipeAsArgs               `protobuf:"bytes,9,opt,name=pipeAsArgs,proto3" json:"pipeAsArgs,omitempty"`
	ScatterPartitions        *Instruction_ScatterPartitions        `protobuf:"bytes,10,opt,name=scatterPartitions,proto3" json:"scatterPartitions,omitempty"`
	CollectPartitions        *Instruction_CollectPartitions        `protobuf:"bytes,11,opt,name=collectPartitions,proto3" json:"collectPartitions,omitempty"`
	InputSplitReader         *Instruction_InputSplitReader         `protobuf:"bytes,12,opt,name=inputSplitReader,proto3" json:"inputSplitReader,omitempty"`
	RoundRobin               *Instruction_RoundRobin               `protobuf:"bytes,13,opt,name=roundRobin,proto3" json:"roundRobin,omitempty"`
	LocalTop                 *Instruction_LocalTop                 `protobuf:"bytes,14,opt,name=localTop,proto3" json:"localTop,omitempty"`
	Broadcast                *Instruction_Broadcast                `protobuf:"bytes,15,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	LocalHashAndJoinWith     *Instruction_LocalHashAndJoinWith     `protobuf:"bytes,16,opt,name=localHashAndJoinWith,proto3" json:"localHashAndJoinWith,omitempty"`
	Script                   *Instruction_Script                   `protobuf:"bytes,17,opt,name=script,proto3" json:"script,omitempty"`
	LocalSort                *Instruction_LocalSort                `protobuf:"bytes,18,opt,name=localSort,proto3" json:"localSort,omitempty"`
	MergeSortedTo            *Instruction_MergeSortedTo            `protobuf:"bytes,19,opt,name=mergeSortedTo,proto3" json:"mergeSortedTo,omitempty"`
	MergeTo                  *Instruction_MergeTo                  `protobuf:"bytes,20,opt,name=mergeTo,proto3" json:"mergeTo,omitempty"`
	LocalDistinct            *Instruction_LocalDistinct            `protobuf:"bytes,21,opt,name=localDistinct,proto3" json:"localDistinct,omitempty"`
	LocalLimit               *Instruction_LocalLimit               `protobuf:"bytes,22,opt,name=localLimit,proto3" json:"localLimit,omitempty"`
	LocalGroupBySorted       *Instruction_LocalGroupBySorted       `protobuf:"bytes,23,opt,name=localGroupBySorted,proto3" json:"localGroupBySorted,omitempty"`
	Union                    *Instruction_Union                    `protobuf:"bytes,24,opt,name=union,proto3" json:"union,omitempty"`
}

func (x *Instruction) Reset() {
	*x = Instruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction) ProtoMessage() {}

func (x *Instruction) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction.ProtoReflect.Descriptor instead.
func (*Instruction) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24}
}

func (x *Instruction) GetStepId() int32 {
	if x != nil {
		return x.StepId
	}
	return 0
}

func (x *Instruction) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *Instruction) GetMemoryInMB() int32 {
	if x != nil {
		return x.MemoryInMB
	}
	return 0
}

func (x *Instruction) GetInputShardLocations() []*DatasetShardLocation {
	if x != nil {
		return x.InputShardLocations
	}
	return nil
}

func (x *Instruction) GetOutputShardLocations() []*DatasetShardLocation {
	if x != nil {
		return x.OutputShardLocations
	}
	return nil
}

func (x *Instruction) GetSelect() *Instruction_Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *Instruction) GetJoinPartitionedSorted() *Instruction_JoinPartitionedSorted {
	if x != nil {
		return x.JoinPartitionedSorted
	}
	return nil
}

func (x *Instruction) GetCoGroupPartitionedSorted() *Instruction_CoGroupPartitionedSorted {
	if x != nil {
		return x.CoGroupPartitionedSorted
	}
	return nil
}

func (x *Instruction) GetPipeAsArgs() *Instruction_PipeAsArgs {
	if x != nil {
		return x.PipeAsArgs
	}
	return nil
}

func (x *Instruction) GetScatterPartitions() *Instruction_ScatterPartitions {
	if x != nil {
		return x.ScatterPartitions
	}
	return nil
}

func (x *Instruction) GetCollectPartitions() *Instruction_CollectPartitions {
	if x != nil {
		return x.CollectPartitions
	}
	return nil
}

func (x *Instruction) GetInputSplitReader() *Instruction_InputSplitReader {
	if x != nil {
		return x.InputSplitReader
	}
	return nil
}

func (x *Instruction) GetRoundRobin() *Instruction_RoundRobin {
	if x != nil {
		return x.RoundRobin
	}
	return nil
}

func (x *Instruction) GetLocalTop() *Instruction_LocalTop {
	if x != nil {
		return x.LocalTop
	}
	return nil
}

func (x *Instruction) GetBroadcast() *Instruction_Broadcast {
	if x != nil {
		return x.Broadcast
	}
	return nil
}

func (x *Instruction) GetLocalHashAndJoinWith() *Instruction_LocalHashAndJoinWith {
	if x != nil {
		return x.LocalHashAndJoinWith
	}
	return nil
}

func (x *Instruction) GetScript() *Instruction_Script {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *Instruction) GetLocalSort() *Instruction_LocalSort {
	if x != nil {
		return x.LocalSort
	}
	return nil
}

func (x *Instruction) GetMergeSortedTo() *Instruction_MergeSortedTo {
	if x != nil {
		return x.MergeSortedTo
	}
	return nil
}

func (x *Instruction) GetMergeTo() *Instruction_MergeTo {
	if x != nil {
		return x.MergeTo
	}
	return nil
}

func (x *Instruction) GetLocalDistinct() *Instruction_LocalDistinct {
	if x != nil {
		return x.LocalDistinct
	}
	return nil
}

func (x *Instruction) GetLocalLimit() *Instruction_LocalLimit {
	if x != nil {
		return x.LocalLimit
	}
	return nil
}

func (x *Instruction) GetLocalGroupBySorted() *Instruction_LocalGroupBySorted {
	if x != nil {
		return x.LocalGroupBySorted
	}
	return nil
}

func (x *Instruction) GetUnion() *Instruction_Union {
	if x != nil {
		return x.Union
	}
	return nil
}

type OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Order int32 `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *OrderBy) Reset() {
	*x = OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBy) ProtoMessage() {}

func (x *OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBy.ProtoReflect.Descriptor instead.
func (*OrderBy) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{25}
}

func (x *OrderBy) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *OrderBy) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type DatasetShard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowName       string `protobuf:"bytes,1,opt,name=FlowName,proto3" json:"FlowName,omitempty"`
	DatasetId      int32  `protobuf:"varint,2,opt,name=DatasetId,proto3" json:"DatasetId,omitempty"`
	DatasetShardId int32  `protobuf:"varint,3,opt,name=DatasetShardId,proto3" json:"DatasetShardId,omitempty"`
	FlowHashCode   uint32 `protobuf:"varint,4,opt,name=FlowHashCode,proto3" json:"FlowHashCode,omitempty"` //uint32 must be optional
}

func (x *DatasetShard) Reset() {
	*x = DatasetShard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetShard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetShard) ProtoMessage() {}

func (x *DatasetShard) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetShard.ProtoReflect.Descriptor instead.
func (*DatasetShard) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{26}
}

func (x *DatasetShard) GetFlowName() string {
	if x != nil {
		return x.FlowName
	}
	return ""
}

func (x *DatasetShard) GetDatasetId() int32 {
	if x != nil {
		return x.DatasetId
	}
	return 0
}

func (x *DatasetShard) GetDatasetShardId() int32 {
	if x != nil {
		return x.DatasetShardId
	}
	return 0
}

func (x *DatasetShard) GetFlowHashCode() uint32 {
	if x != nil {
		return x.FlowHashCode
	}
	return 0
}

type DatasetShardLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Host   string `protobuf:"bytes,2,opt,name=Host,proto3" json:"Host,omitempty"`
	Port   int32  `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	OnDisk bool   `protobuf:"varint,4,opt,name=onDisk,proto3" json:"onDisk,omitempty"`
}

func (x *DatasetShardLocation) Reset() {
	*x = DatasetShardLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetShardLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetShardLocation) ProtoMessage() {}

func (x *DatasetShardLocation) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetShardLocation.ProtoReflect.Descriptor instead.
func (*DatasetShardLocation) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{27}
}

func (x *DatasetShardLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatasetShardLocation) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DatasetShardLocation) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DatasetShardLocation) GetOnDisk() bool {
	if x != nil {
		return x.OnDisk
	}
	return false
}

type FlowExecutionStatus_Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StepId int32 `protobuf:"varint,1,opt,name=stepId,proto3" json:"stepId,omitempty"`
	Id     int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"` // unique when combined with stepId
}

func (x *FlowExecutionStatus_Task) Reset() {
	*x = FlowExecutionStatus_Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowExecutionStatus_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowExecutionStatus_Task) ProtoMessage() {}

func (x *FlowExecutionStatus_Task) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowExecutionStatus_Task.ProtoReflect.Descriptor instead.
func (*FlowExecutionStatus_Task) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{9, 0}
}

func (x *FlowExecutionStatus_Task) GetStepId() int32 {
	if x != nil {
		return x.StepId
	}
	return 0
}

func (x *FlowExecutionStatus_Task) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FlowExecutionStatus_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentIds       []int32 `protobuf:"varint,3,rep,packed,name=parentIds,proto3" json:"parentIds,omitempty"`
	TaskIds         []int32 `protobuf:"varint,4,rep,packed,name=taskIds,proto3" json:"taskIds,omitempty"`
	InputDatasetId  []int32 `protobuf:"varint,5,rep,packed,name=inputDatasetId,proto3" json:"inputDatasetId,omitempty"`
	OutputDatasetId int32   `protobuf:"varint,6,opt,name=outputDatasetId,proto3" json:"outputDatasetId,omitempty"`
	Description     string  `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *FlowExecutionStatus_Step) Reset() {
	*x = FlowExecutionStatus_Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowExecutionStatus_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowExecutionStatus_Step) ProtoMessage() {}

func (x *FlowExecutionStatus_Step) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowExecutionStatus_Step.ProtoReflect.Descriptor instead.
func (*FlowExecutionStatus_Step) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{9, 1}
}

func (x *FlowExecutionStatus_Step) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlowExecutionStatus_Step) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlowExecutionStatus_Step) GetParentIds() []int32 {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *FlowExecutionStatus_Step) GetTaskIds() []int32 {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

func (x *FlowExecutionStatus_Step) GetInputDatasetId() []int32 {
	if x != nil {
		return x.InputDatasetId
	}
	return nil
}

func (x *FlowExecutionStatus_Step) GetOutputDatasetId() int32 {
	if x != nil {
		return x.OutputDatasetId
	}
	return 0
}

func (x *FlowExecutionStatus_Step) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type FlowExecutionStatus_Dataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StepId         int32   `protobuf:"varint,2,opt,name=stepId,proto3" json:"stepId,omitempty"`
	ReadingStepIds []int32 `protobuf:"varint,3,rep,packed,name=readingStepIds,proto3" json:"readingStepIds,omitempty"`
}

func (x *FlowExecutionStatus_Dataset) Reset() {
	*x = FlowExecutionStatus_Dataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowExecutionStatus_Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowExecutionStatus_Dataset) ProtoMessage() {}

func (x *FlowExecutionStatus_Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowExecutionStatus_Dataset.ProtoReflect.Descriptor instead.
func (*FlowExecutionStatus_Dataset) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{9, 2}
}

func (x *FlowExecutionStatus_Dataset) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlowExecutionStatus_Dataset) GetStepId() int32 {
	if x != nil {
		return x.StepId
	}
	return 0
}

func (x *FlowExecutionStatus_Dataset) GetReadingStepIds() []int32 {
	if x != nil {
		return x.ReadingStepIds
	}
	return nil
}

type FlowExecutionStatus_DatasetShard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId int32 `protobuf:"varint,1,opt,name=datasetId,proto3" json:"datasetId,omitempty"`
	Id        int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"` // unique when combined with datasetId
}

func (x *FlowExecutionStatus_DatasetShard) Reset() {
	*x = FlowExecutionStatus_DatasetShard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowExecutionStatus_DatasetShard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowExecutionStatus_DatasetShard) ProtoMessage() {}

func (x *FlowExecutionStatus_DatasetShard) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowExecutionStatus_DatasetShard.ProtoReflect.Descriptor instead.
func (*FlowExecutionStatus_DatasetShard) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{9, 3}
}

func (x *FlowExecutionStatus_DatasetShard) GetDatasetId() int32 {
	if x != nil {
		return x.DatasetId
	}
	return 0
}

func (x *FlowExecutionStatus_DatasetShard) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FlowExecutionStatus_StepGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StepIds   []int32 `protobuf:"varint,1,rep,packed,name=stepIds,proto3" json:"stepIds,omitempty"`
	ParentIds []int32 `protobuf:"varint,2,rep,packed,name=parentIds,proto3" json:"parentIds,omitempty"`
}

func (x *FlowExecutionStatus_StepGroup) Reset() {
	*x = FlowExecutionStatus_StepGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowExecutionStatus_StepGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowExecutionStatus_StepGroup) ProtoMessage() {}

func (x *FlowExecutionStatus_StepGroup) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowExecutionStatus_StepGroup.ProtoReflect.Descriptor instead.
func (*FlowExecutionStatus_StepGroup) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{9, 4}
}

func (x *FlowExecutionStatus_StepGroup) GetStepIds() []int32 {
	if x != nil {
		return x.StepIds
	}
	return nil
}

func (x *FlowExecutionStatus_StepGroup) GetParentIds() []int32 {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

type FlowExecutionStatus_TaskGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StepIds    []int32                                    `protobuf:"varint,1,rep,packed,name=stepIds,proto3" json:"stepIds,omitempty"`
	TaskIds    []int32                                    `protobuf:"varint,2,rep,packed,name=taskIds,proto3" json:"taskIds,omitempty"`
	Request    *ExecutionRequest                          `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	Allocation *Allocation                                `protobuf:"bytes,4,opt,name=allocation,proto3" json:"allocation,omitempty"`
	Executions []*FlowExecutionStatus_TaskGroup_Execution `protobuf:"bytes,5,rep,name=executions,proto3" json:"executions,omitempty"`
}

func (x *FlowExecutionStatus_TaskGroup) Reset() {
	*x = FlowExecutionStatus_TaskGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowExecutionStatus_TaskGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowExecutionStatus_TaskGroup) ProtoMessage() {}

func (x *FlowExecutionStatus_TaskGroup) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowExecutionStatus_TaskGroup.ProtoReflect.Descriptor instead.
func (*FlowExecutionStatus_TaskGroup) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{9, 5}
}

func (x *FlowExecutionStatus_TaskGroup) GetStepIds() []int32 {
	if x != nil {
		return x.StepIds
	}
	return nil
}

func (x *FlowExecutionStatus_TaskGroup) GetTaskIds() []int32 {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

func (x *FlowExecutionStatus_TaskGroup) GetRequest() *ExecutionRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *FlowExecutionStatus_TaskGroup) GetAllocation() *Allocation {
	if x != nil {
		return x.Allocation
	}
	return nil
}

func (x *FlowExecutionStatus_TaskGroup) GetExecutions() []*FlowExecutionStatus_TaskGroup_Execution {
	if x != nil {
		return x.Executions
	}
	return nil
}

type FlowExecutionStatus_DriverInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username       string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Hostname       string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Executable     string `protobuf:"bytes,3,opt,name=executable,proto3" json:"executable,omitempty"`
	ExecutableHash string `protobuf:"bytes,4,opt,name=executable_hash,json=executableHash,proto3" json:"executable_hash,omitempty"`
	StartTime      int64  `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime       int64  `protobuf:"varint,6,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	Name           string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FlowExecutionStatus_DriverInfo) Reset() {
	*x = FlowExecutionStatus_DriverInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowExecutionStatus_DriverInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowExecutionStatus_DriverInfo) ProtoMessage() {}

func (x *FlowExecutionStatus_DriverInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowExecutionStatus_DriverInfo.ProtoReflect.Descriptor instead.
func (*FlowExecutionStatus_DriverInfo) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{9, 6}
}

func (x *FlowExecutionStatus_DriverInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FlowExecutionStatus_DriverInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *FlowExecutionStatus_DriverInfo) GetExecutable() string {
	if x != nil {
		return x.Executable
	}
	return ""
}

func (x *FlowExecutionStatus_DriverInfo) GetExecutableHash() string {
	if x != nil {
		return x.ExecutableHash
	}
	return ""
}

func (x *FlowExecutionStatus_DriverInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FlowExecutionStatus_DriverInfo) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *FlowExecutionStatus_DriverInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FlowExecutionStatus_TaskGroup_Execution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime     int64          `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime      int64          `protobuf:"varint,2,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	SystemTime    float64        `protobuf:"fixed64,3,opt,name=system_time,json=systemTime,proto3" json:"system_time,omitempty"`
	UserTime      float64        `protobuf:"fixed64,4,opt,name=user_time,json=userTime,proto3" json:"user_time,omitempty"`
	Error         []byte         `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	OutputHash    []byte         `protobuf:"bytes,6,opt,name=output_hash,json=outputHash,proto3" json:"output_hash,omitempty"`
	ExecutionStat *ExecutionStat `protobuf:"bytes,7,opt,name=executionStat,proto3" json:"executionStat,omitempty"`
}

func (x *FlowExecutionStatus_TaskGroup_Execution) Reset() {
	*x = FlowExecutionStatus_TaskGroup_Execution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowExecutionStatus_TaskGroup_Execution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowExecutionStatus_TaskGroup_Execution) ProtoMessage() {}

func (x *FlowExecutionStatus_TaskGroup_Execution) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowExecutionStatus_TaskGroup_Execution.ProtoReflect.Descriptor instead.
func (*FlowExecutionStatus_TaskGroup_Execution) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{9, 5, 0}
}

func (x *FlowExecutionStatus_TaskGroup_Execution) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FlowExecutionStatus_TaskGroup_Execution) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *FlowExecutionStatus_TaskGroup_Execution) GetSystemTime() float64 {
	if x != nil {
		return x.SystemTime
	}
	return 0
}

func (x *FlowExecutionStatus_TaskGroup_Execution) GetUserTime() float64 {
	if x != nil {
		return x.UserTime
	}
	return 0
}

func (x *FlowExecutionStatus_TaskGroup_Execution) GetError() []byte {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *FlowExecutionStatus_TaskGroup_Execution) GetOutputHash() []byte {
	if x != nil {
		return x.OutputHash
	}
	return nil
}

func (x *FlowExecutionStatus_TaskGroup_Execution) GetExecutionStat() *ExecutionStat {
	if x != nil {
		return x.ExecutionStat
	}
	return nil
}

type Instruction_Select struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyIndexes   []int32 `protobuf:"varint,1,rep,packed,name=keyIndexes,proto3" json:"keyIndexes,omitempty"`
	ValueIndexes []int32 `protobuf:"varint,2,rep,packed,name=valueIndexes,proto3" json:"valueIndexes,omitempty"`
}

func (x *Instruction_Select) Reset() {
	*x = Instruction_Select{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_Select) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_Select) ProtoMessage() {}

func (x *Instruction_Select) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_Select.ProtoReflect.Descriptor instead.
func (*Instruction_Select) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 0}
}

func (x *Instruction_Select) GetKeyIndexes() []int32 {
	if x != nil {
		return x.KeyIndexes
	}
	return nil
}

func (x *Instruction_Select) GetValueIndexes() []int32 {
	if x != nil {
		return x.ValueIndexes
	}
	return nil
}

type Instruction_JoinPartitionedSorted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexes          []int32 `protobuf:"varint,1,rep,packed,name=indexes,proto3" json:"indexes,omitempty"`
	IsLeftOuterJoin  bool    `protobuf:"varint,2,opt,name=isLeftOuterJoin,proto3" json:"isLeftOuterJoin,omitempty"`
	IsRightOuterJoin bool    `protobuf:"varint,3,opt,name=isRightOuterJoin,proto3" json:"isRightOuterJoin,omitempty"`
}

func (x *Instruction_JoinPartitionedSorted) Reset() {
	*x = Instruction_JoinPartitionedSorted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_JoinPartitionedSorted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_JoinPartitionedSorted) ProtoMessage() {}

func (x *Instruction_JoinPartitionedSorted) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_JoinPartitionedSorted.ProtoReflect.Descriptor instead.
func (*Instruction_JoinPartitionedSorted) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 1}
}

func (x *Instruction_JoinPartitionedSorted) GetIndexes() []int32 {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *Instruction_JoinPartitionedSorted) GetIsLeftOuterJoin() bool {
	if x != nil {
		return x.IsLeftOuterJoin
	}
	return false
}

func (x *Instruction_JoinPartitionedSorted) GetIsRightOuterJoin() bool {
	if x != nil {
		return x.IsRightOuterJoin
	}
	return false
}

type Instruction_CoGroupPartitionedSorted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexes []int32 `protobuf:"varint,1,rep,packed,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *Instruction_CoGroupPartitionedSorted) Reset() {
	*x = Instruction_CoGroupPartitionedSorted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_CoGroupPartitionedSorted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_CoGroupPartitionedSorted) ProtoMessage() {}

func (x *Instruction_CoGroupPartitionedSorted) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_CoGroupPartitionedSorted.ProtoReflect.Descriptor instead.
func (*Instruction_CoGroupPartitionedSorted) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 2}
}

func (x *Instruction_CoGroupPartitionedSorted) GetIndexes() []int32 {
	if x != nil {
		return x.Indexes
	}
	return nil
}

type Instruction_PipeAsArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Instruction_PipeAsArgs) Reset() {
	*x = Instruction_PipeAsArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_PipeAsArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_PipeAsArgs) ProtoMessage() {}

func (x *Instruction_PipeAsArgs) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_PipeAsArgs.ProtoReflect.Descriptor instead.
func (*Instruction_PipeAsArgs) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 3}
}

func (x *Instruction_PipeAsArgs) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Instruction_ScatterPartitions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexes []int32 `protobuf:"varint,1,rep,packed,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *Instruction_ScatterPartitions) Reset() {
	*x = Instruction_ScatterPartitions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_ScatterPartitions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_ScatterPartitions) ProtoMessage() {}

func (x *Instruction_ScatterPartitions) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_ScatterPartitions.ProtoReflect.Descriptor instead.
func (*Instruction_ScatterPartitions) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 4}
}

func (x *Instruction_ScatterPartitions) GetIndexes() []int32 {
	if x != nil {
		return x.Indexes
	}
	return nil
}

type Instruction_CollectPartitions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Instruction_CollectPartitions) Reset() {
	*x = Instruction_CollectPartitions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_CollectPartitions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_CollectPartitions) ProtoMessage() {}

func (x *Instruction_CollectPartitions) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_CollectPartitions.ProtoReflect.Descriptor instead.
func (*Instruction_CollectPartitions) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 5}
}

type Instruction_InputSplitReader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputType string `protobuf:"bytes,1,opt,name=inputType,proto3" json:"inputType,omitempty"`
}

func (x *Instruction_InputSplitReader) Reset() {
	*x = Instruction_InputSplitReader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_InputSplitReader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_InputSplitReader) ProtoMessage() {}

func (x *Instruction_InputSplitReader) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_InputSplitReader.ProtoReflect.Descriptor instead.
func (*Instruction_InputSplitReader) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 6}
}

func (x *Instruction_InputSplitReader) GetInputType() string {
	if x != nil {
		return x.InputType
	}
	return ""
}

type Instruction_RoundRobin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Instruction_RoundRobin) Reset() {
	*x = Instruction_RoundRobin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_RoundRobin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_RoundRobin) ProtoMessage() {}

func (x *Instruction_RoundRobin) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_RoundRobin.ProtoReflect.Descriptor instead.
func (*Instruction_RoundRobin) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 7}
}

type Instruction_LocalTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N        int32      `protobuf:"varint,1,opt,name=n,proto3" json:"n,omitempty"`
	OrderBys []*OrderBy `protobuf:"bytes,2,rep,name=orderBys,proto3" json:"orderBys,omitempty"`
}

func (x *Instruction_LocalTop) Reset() {
	*x = Instruction_LocalTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_LocalTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_LocalTop) ProtoMessage() {}

func (x *Instruction_LocalTop) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_LocalTop.ProtoReflect.Descriptor instead.
func (*Instruction_LocalTop) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 8}
}

func (x *Instruction_LocalTop) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *Instruction_LocalTop) GetOrderBys() []*OrderBy {
	if x != nil {
		return x.OrderBys
	}
	return nil
}

type Instruction_Broadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Instruction_Broadcast) Reset() {
	*x = Instruction_Broadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_Broadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_Broadcast) ProtoMessage() {}

func (x *Instruction_Broadcast) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_Broadcast.ProtoReflect.Descriptor instead.
func (*Instruction_Broadcast) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 9}
}

type Instruction_LocalHashAndJoinWith struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexes []int32 `protobuf:"varint,1,rep,packed,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *Instruction_LocalHashAndJoinWith) Reset() {
	*x = Instruction_LocalHashAndJoinWith{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_LocalHashAndJoinWith) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_LocalHashAndJoinWith) ProtoMessage() {}

func (x *Instruction_LocalHashAndJoinWith) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_LocalHashAndJoinWith.ProtoReflect.Descriptor instead.
func (*Instruction_LocalHashAndJoinWith) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 10}
}

func (x *Instruction_LocalHashAndJoinWith) GetIndexes() []int32 {
	if x != nil {
		return x.Indexes
	}
	return nil
}

type Instruction_Script struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPipe bool     `protobuf:"varint,1,opt,name=isPipe,proto3" json:"isPipe,omitempty"`
	Path   string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Args   []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	Env    []string `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
}

func (x *Instruction_Script) Reset() {
	*x = Instruction_Script{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_Script) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_Script) ProtoMessage() {}

func (x *Instruction_Script) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_Script.ProtoReflect.Descriptor instead.
func (*Instruction_Script) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 11}
}

func (x *Instruction_Script) GetIsPipe() bool {
	if x != nil {
		return x.IsPipe
	}
	return false
}

func (x *Instruction_Script) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Instruction_Script) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Instruction_Script) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

type Instruction_LocalSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderBys []*OrderBy `protobuf:"bytes,1,rep,name=orderBys,proto3" json:"orderBys,omitempty"`
}

func (x *Instruction_LocalSort) Reset() {
	*x = Instruction_LocalSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_LocalSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_LocalSort) ProtoMessage() {}

func (x *Instruction_LocalSort) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_LocalSort.ProtoReflect.Descriptor instead.
func (*Instruction_LocalSort) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 12}
}

func (x *Instruction_LocalSort) GetOrderBys() []*OrderBy {
	if x != nil {
		return x.OrderBys
	}
	return nil
}

type Instruction_MergeSortedTo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderBys []*OrderBy `protobuf:"bytes,1,rep,name=orderBys,proto3" json:"orderBys,omitempty"`
}

func (x *Instruction_MergeSortedTo) Reset() {
	*x = Instruction_MergeSortedTo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_MergeSortedTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_MergeSortedTo) ProtoMessage() {}

func (x *Instruction_MergeSortedTo) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_MergeSortedTo.ProtoReflect.Descriptor instead.
func (*Instruction_MergeSortedTo) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 13}
}

func (x *Instruction_MergeSortedTo) GetOrderBys() []*OrderBy {
	if x != nil {
		return x.OrderBys
	}
	return nil
}

type Instruction_MergeTo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Instruction_MergeTo) Reset() {
	*x = Instruction_MergeTo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_MergeTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_MergeTo) ProtoMessage() {}

func (x *Instruction_MergeTo) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_MergeTo.ProtoReflect.Descriptor instead.
func (*Instruction_MergeTo) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 14}
}

type Instruction_LocalDistinct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderBys []*OrderBy `protobuf:"bytes,1,rep,name=orderBys,proto3" json:"orderBys,omitempty"`
}

func (x *Instruction_LocalDistinct) Reset() {
	*x = Instruction_LocalDistinct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_LocalDistinct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_LocalDistinct) ProtoMessage() {}

func (x *Instruction_LocalDistinct) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_LocalDistinct.ProtoReflect.Descriptor instead.
func (*Instruction_LocalDistinct) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 15}
}

func (x *Instruction_LocalDistinct) GetOrderBys() []*OrderBy {
	if x != nil {
		return x.OrderBys
	}
	return nil
}

type Instruction_LocalLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N      int32 `protobuf:"varint,1,opt,name=n,proto3" json:"n,omitempty"`
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Instruction_LocalLimit) Reset() {
	*x = Instruction_LocalLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_LocalLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_LocalLimit) ProtoMessage() {}

func (x *Instruction_LocalLimit) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_LocalLimit.ProtoReflect.Descriptor instead.
func (*Instruction_LocalLimit) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 16}
}

func (x *Instruction_LocalLimit) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *Instruction_LocalLimit) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type Instruction_LocalGroupBySorted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexes []int32 `protobuf:"varint,1,rep,packed,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *Instruction_LocalGroupBySorted) Reset() {
	*x = Instruction_LocalGroupBySorted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_LocalGroupBySorted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_LocalGroupBySorted) ProtoMessage() {}

func (x *Instruction_LocalGroupBySorted) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_LocalGroupBySorted.ProtoReflect.Descriptor instead.
func (*Instruction_LocalGroupBySorted) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 17}
}

func (x *Instruction_LocalGroupBySorted) GetIndexes() []int32 {
	if x != nil {
		return x.Indexes
	}
	return nil
}

type Instruction_Union struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsParallel bool `protobuf:"varint,1,opt,name=isParallel,proto3" json:"isParallel,omitempty"`
}

func (x *Instruction_Union) Reset() {
	*x = Instruction_Union{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gleam_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction_Union) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction_Union) ProtoMessage() {}

func (x *Instruction_Union) ProtoReflect() protoreflect.Message {
	mi := &file_gleam_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction_Union.ProtoReflect.Descriptor instead.
func (*Instruction_Union) Descriptor() ([]byte, []int) {
	return file_gleam_proto_rawDescGZIP(), []int{24, 18}
}

func (x *Instruction_Union) GetIsParallel() bool {
	if x != nil {
		return x.IsParallel
	}
	return false
}

var File_gleam_proto protoreflect.FileDescriptor

var file_gleam_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x6c, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0xcf, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x61, 0x73, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x70, 0x75, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x70, 0x75, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x67, 0x70, 0x75, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x62, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6b,
	0x5f, 0x6d, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x73, 0x6b, 0x4d,
	0x62, 0x22, 0x4c, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x28, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x6b, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x69, 0x0a, 0x0a,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x99, 0x01,
	0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x64, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x22, 0x9c, 0x0d, 0x0a, 0x13, 0x46, 0x6c, 0x6f,
	0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x41, 0x0a, 0x0a, 0x73, 0x74, 0x65, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74,
	0x65, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x73, 0x74, 0x65, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x6f,
	0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c,
	0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x32, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x65, 0x70,
	0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x6f,
	0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x2e, 0x0a, 0x04, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x65, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x65, 0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x1a, 0xd6, 0x01, 0x0a, 0x04, 0x53, 0x74,
	0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x59, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x65, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x65, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x65, 0x70, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x72,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x49, 0x64, 0x73, 0x1a, 0x3c, 0x0a,
	0x0c, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x43, 0x0a, 0x09, 0x53,
	0x74, 0x65, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x70,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x65, 0x70, 0x49,
	0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73,
	0x1a, 0xe4, 0x03, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x65, 0x70, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x74, 0x65, 0x70, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x6f, 0x77,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0xf5, 0x01, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x37,
	0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xdd, 0x01, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x6f,
	0x77, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x91, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x11, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x22, 0x5e, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x61, 0x73, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x48,
	0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x65, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x65, 0x70, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x22, 0x99, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4f, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x49,
	0x4f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x6e, 0x44, 0x69, 0x73,
	0x6b, 0x49, 0x4f, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x34, 0x0a, 0x0e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x61, 0x73, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x48,
	0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x27, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x72, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x61, 0x73, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd2, 0x13,
	0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x65, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x65, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x4d, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x4d, 0x42, 0x12, 0x4a, 0x0a,
	0x13, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x14, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x14, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x5b, 0x0a, 0x15, 0x6a, 0x6f, 0x69, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x15, 0x6a,
	0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x18, 0x63, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x52, 0x18, 0x63, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x69,
	0x70, 0x65, 0x41, 0x73, 0x41, 0x72, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x41, 0x73, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65,
	0x41, 0x73, 0x41, 0x72, 0x67, 0x73, 0x12, 0x4f, 0x0a, 0x11, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4f, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52,
	0x6f, 0x62, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x6f, 0x62, 0x69, 0x6e, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x6f, 0x62,
	0x69, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x6f, 0x70, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x6f, 0x70, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x6f, 0x70, 0x12, 0x37, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x12, 0x58, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x41, 0x6e,
	0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68,
	0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x53, 0x6f, 0x72, 0x74, 0x12, 0x43, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x54, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x54, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x54, 0x6f, 0x52, 0x07, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x12, 0x43, 0x0a, 0x0d,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x63, 0x74, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63,
	0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x52, 0x0a,
	0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x12, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x2b, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x1a, 0x4c,
	0x0a, 0x06, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x6b, 0x65,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x1a, 0x87, 0x01, 0x0a,
	0x15, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x4c, 0x65, 0x66, 0x74, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x4a,
	0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4c, 0x65, 0x66,
	0x74, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x75, 0x74,
	0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x1a, 0x34, 0x0a, 0x18, 0x43, 0x6f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x53, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x1a, 0x20, 0x0a, 0x0a,
	0x50, 0x69, 0x70, 0x65, 0x41, 0x73, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x2d,
	0x0a, 0x11, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x1a, 0x13, 0x0a,
	0x11, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x30, 0x0a, 0x10, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x0c, 0x0a, 0x0a, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x6f, 0x62,
	0x69, 0x6e, 0x1a, 0x41, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x6f, 0x70, 0x12, 0x0c,
	0x0a, 0x01, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6e, 0x12, 0x27, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x73, 0x1a, 0x0b, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x1a, 0x30, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x41,
	0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x1a, 0x5a, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x50, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x50, 0x69, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76,
	0x1a, 0x34, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x73, 0x1a, 0x38, 0x0a, 0x0d, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x27, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x73,
	0x1a, 0x09, 0x0a, 0x07, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x1a, 0x38, 0x0a, 0x0d, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x73, 0x1a, 0x32, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0x2e, 0x0a, 0x12, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x1a, 0x27, 0x0a, 0x05, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c,
	0x65, 0x6c, 0x22, 0x35, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6c,
	0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x6c,
	0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x46, 0x6c, 0x6f, 0x77, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x6a, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x32, 0xbb, 0x01, 0x0a,
	0x0b, 0x47, 0x6c, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x41, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x46,
	0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x32, 0x4f, 0x0a, 0x0d, 0x47, 0x6c,
	0x65, 0x61, 0x6d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x1a, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x32, 0xd6, 0x02, 0x0a, 0x0a,
	0x47, 0x6c, 0x65, 0x61, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x10, 0x53, 0x65,
	0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x1a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x28, 0x01, 0x12, 0x49, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x07, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gleam_proto_rawDescOnce sync.Once
	file_gleam_proto_rawDescData = file_gleam_proto_rawDesc
)

func file_gleam_proto_rawDescGZIP() []byte {
	file_gleam_proto_rawDescOnce.Do(func() {
		file_gleam_proto_rawDescData = protoimpl.X.CompressGZIP(file_gleam_proto_rawDescData)
	})
	return file_gleam_proto_rawDescData
}

var file_gleam_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_gleam_proto_goTypes = []interface{}{
	(*ComputeRequest)(nil),                          // 0: pb.ComputeRequest
	(*ComputeResource)(nil),                         // 1: pb.ComputeResource
	(*DataResource)(nil),                            // 2: pb.DataResource
	(*Location)(nil),                                // 3: pb.Location
	(*Allocation)(nil),                              // 4: pb.Allocation
	(*AllocationResult)(nil),                        // 5: pb.AllocationResult
	(*Heartbeat)(nil),                               // 6: pb.Heartbeat
	(*Empty)(nil),                                   // 7: pb.Empty
	(*DataLocation)(nil),                            // 8: pb.DataLocation
	(*FlowExecutionStatus)(nil),                     // 9: pb.FlowExecutionStatus
	(*FileResourceRequest)(nil),                     // 10: pb.FileResourceRequest
	(*FileResourceResponse)(nil),                    // 11: pb.FileResourceResponse
	(*ExecutionRequest)(nil),                        // 12: pb.ExecutionRequest
	(*ExecutionResponse)(nil),                       // 13: pb.ExecutionResponse
	(*ExecutionStat)(nil),                           // 14: pb.ExecutionStat
	(*InstructionStat)(nil),                         // 15: pb.InstructionStat
	(*ControlMessage)(nil),                          // 16: pb.ControlMessage
	(*DeleteDatasetShardRequest)(nil),               // 17: pb.DeleteDatasetShardRequest
	(*DeleteDatasetShardResponse)(nil),              // 18: pb.DeleteDatasetShardResponse
	(*CleanupRequest)(nil),                          // 19: pb.CleanupRequest
	(*CleanupResponse)(nil),                         // 20: pb.CleanupResponse
	(*WriteRequest)(nil),                            // 21: pb.WriteRequest
	(*ReadRequest)(nil),                             // 22: pb.ReadRequest
	(*InstructionSet)(nil),                          // 23: pb.InstructionSet
	(*Instruction)(nil),                             // 24: pb.Instruction
	(*OrderBy)(nil),                                 // 25: pb.OrderBy
	(*DatasetShard)(nil),                            // 26: pb.DatasetShard
	(*DatasetShardLocation)(nil),                    // 27: pb.DatasetShardLocation
	(*FlowExecutionStatus_Task)(nil),                // 28: pb.FlowExecutionStatus.Task
	(*FlowExecutionStatus_Step)(nil),                // 29: pb.FlowExecutionStatus.Step
	(*FlowExecutionStatus_Dataset)(nil),             // 30: pb.FlowExecutionStatus.Dataset
	(*FlowExecutionStatus_DatasetShard)(nil),        // 31: pb.FlowExecutionStatus.DatasetShard
	(*FlowExecutionStatus_StepGroup)(nil),           // 32: pb.FlowExecutionStatus.StepGroup
	(*FlowExecutionStatus_TaskGroup)(nil),           // 33: pb.FlowExecutionStatus.TaskGroup
	(*FlowExecutionStatus_DriverInfo)(nil),          // 34: pb.FlowExecutionStatus.DriverInfo
	(*FlowExecutionStatus_TaskGroup_Execution)(nil), // 35: pb.FlowExecutionStatus.TaskGroup.Execution
	(*Instruction_Select)(nil),                      // 36: pb.Instruction.Select
	(*Instruction_JoinPartitionedSorted)(nil),       // 37: pb.Instruction.JoinPartitionedSorted
	(*Instruction_CoGroupPartitionedSorted)(nil),    // 38: pb.Instruction.CoGroupPartitionedSorted
	(*Instruction_PipeAsArgs)(nil),                  // 39: pb.Instruction.PipeAsArgs
	(*Instruction_ScatterPartitions)(nil),           // 40: pb.Instruction.ScatterPartitions
	(*Instruction_CollectPartitions)(nil),           // 41: pb.Instruction.CollectPartitions
	(*Instruction_InputSplitReader)(nil),            // 42: pb.Instruction.InputSplitReader
	(*Instruction_RoundRobin)(nil),                  // 43: pb.Instruction.RoundRobin
	(*Instruction_LocalTop)(nil),                    // 44: pb.Instruction.LocalTop
	(*Instruction_Broadcast)(nil),                   // 45: pb.Instruction.Broadcast
	(*Instruction_LocalHashAndJoinWith)(nil),        // 46: pb.Instruction.LocalHashAndJoinWith
	(*Instruction_Script)(nil),                      // 47: pb.Instruction.Script
	(*Instruction_LocalSort)(nil),                   // 48: pb.Instruction.LocalSort
	(*Instruction_MergeSortedTo)(nil),               // 49: pb.Instruction.MergeSortedTo
	(*Instruction_MergeTo)(nil),                     // 50: pb.Instruction.MergeTo
	(*Instruction_LocalDistinct)(nil),               // 51: pb.Instruction.LocalDistinct
	(*Instruction_LocalLimit)(nil),                  // 52: pb.Instruction.LocalLimit
	(*Instruction_LocalGroupBySorted)(nil),          // 53: pb.Instruction.LocalGroupBySorted
	(*Instruction_Union)(nil),                       // 54: pb.Instruction.Union
}
var file_gleam_proto_depIdxs = []int32{
	1,  // 0: pb.ComputeRequest.compute_resources:type_name -> pb.ComputeResource
	3,  // 1: pb.DataResource.location:type_name -> pb.Location
	3,  // 2: pb.Allocation.location:type_name -> pb.Location
	1,  // 3: pb.Allocation.allocated:type_name -> pb.ComputeResource
	4,  // 4: pb.AllocationResult.allocations:type_name -> pb.Allocation
	3,  // 5: pb.Heartbeat.location:type_name -> pb.Location
	1,  // 6: pb.Heartbeat.resource:type_name -> pb.ComputeResource
	1,  // 7: pb.Heartbeat.allocated:type_name -> pb.ComputeResource
	3,  // 8: pb.DataLocation.location:type_name -> pb.Location
	32, // 9: pb.FlowExecutionStatus.stepGroups:type_name -> pb.FlowExecutionStatus.StepGroup
	33, // 10: pb.FlowExecutionStatus.taskGroups:type_name -> pb.FlowExecutionStatus.TaskGroup
	30, // 11: pb.FlowExecutionStatus.datasets:type_name -> pb.FlowExecutionStatus.Dataset
	31, // 12: pb.FlowExecutionStatus.datasetShards:type_name -> pb.FlowExecutionStatus.DatasetShard
	28, // 13: pb.FlowExecutionStatus.tasks:type_name -> pb.FlowExecutionStatus.Task
	29, // 14: pb.FlowExecutionStatus.steps:type_name -> pb.FlowExecutionStatus.Step
	34, // 15: pb.FlowExecutionStatus.driver:type_name -> pb.FlowExecutionStatus.DriverInfo
	23, // 16: pb.ExecutionRequest.instructionSet:type_name -> pb.InstructionSet
	1,  // 17: pb.ExecutionRequest.resource:type_name -> pb.ComputeResource
	14, // 18: pb.ExecutionResponse.executionStat:type_name -> pb.ExecutionStat
	15, // 19: pb.ExecutionStat.stats:type_name -> pb.InstructionStat
	22, // 20: pb.ControlMessage.readRequest:type_name -> pb.ReadRequest
	21, // 21: pb.ControlMessage.writeRequest:type_name -> pb.WriteRequest
	24, // 22: pb.InstructionSet.instructions:type_name -> pb.Instruction
	27, // 23: pb.Instruction.inputShardLocations:type_name -> pb.DatasetShardLocation
	27, // 24: pb.Instruction.OutputShardLocations:type_name -> pb.DatasetShardLocation
	36, // 25: pb.Instruction.select:type_name -> pb.Instruction.Select
	37, // 26: pb.Instruction.joinPartitionedSorted:type_name -> pb.Instruction.JoinPartitionedSorted
	38, // 27: pb.Instruction.coGroupPartitionedSorted:type_name -> pb.Instruction.CoGroupPartitionedSorted
	39, // 28: pb.Instruction.pipeAsArgs:type_name -> pb.Instruction.PipeAsArgs
	40, // 29: pb.Instruction.scatterPartitions:type_name -> pb.Instruction.ScatterPartitions
	41, // 30: pb.Instruction.collectPartitions:type_name -> pb.Instruction.CollectPartitions
	42, // 31: pb.Instruction.inputSplitReader:type_name -> pb.Instruction.InputSplitReader
	43, // 32: pb.Instruction.roundRobin:type_name -> pb.Instruction.RoundRobin
	44, // 33: pb.Instruction.localTop:type_name -> pb.Instruction.LocalTop
	45, // 34: pb.Instruction.broadcast:type_name -> pb.Instruction.Broadcast
	46, // 35: pb.Instruction.localHashAndJoinWith:type_name -> pb.Instruction.LocalHashAndJoinWith
	47, // 36: pb.Instruction.script:type_name -> pb.Instruction.Script
	48, // 37: pb.Instruction.localSort:type_name -> pb.Instruction.LocalSort
	49, // 38: pb.Instruction.mergeSortedTo:type_name -> pb.Instruction.MergeSortedTo
	50, // 39: pb.Instruction.mergeTo:type_name -> pb.Instruction.MergeTo
	51, // 40: pb.Instruction.localDistinct:type_name -> pb.Instruction.LocalDistinct
	52, // 41: pb.Instruction.localLimit:type_name -> pb.Instruction.LocalLimit
	53, // 42: pb.Instruction.localGroupBySorted:type_name -> pb.Instruction.LocalGroupBySorted
	54, // 43: pb.Instruction.union:type_name -> pb.Instruction.Union
	12, // 44: pb.FlowExecutionStatus.TaskGroup.request:type_name -> pb.ExecutionRequest
	4,  // 45: pb.FlowExecutionStatus.TaskGroup.allocation:type_name -> pb.Allocation
	35, // 46: pb.FlowExecutionStatus.TaskGroup.executions:type_name -> pb.FlowExecutionStatus.TaskGroup.Execution
	14, // 47: pb.FlowExecutionStatus.TaskGroup.Execution.executionStat:type_name -> pb.ExecutionStat
	25, // 48: pb.Instruction.LocalTop.orderBys:type_name -> pb.OrderBy
	25, // 49: pb.Instruction.LocalSort.orderBys:type_name -> pb.OrderBy
	25, // 50: pb.Instruction.MergeSortedTo.orderBys:type_name -> pb.OrderBy
	25, // 51: pb.Instruction.LocalDistinct.orderBys:type_name -> pb.OrderBy
	0,  // 52: pb.GleamMaster.GetResources:input_type -> pb.ComputeRequest
	6,  // 53: pb.GleamMaster.SendHeartbeat:input_type -> pb.Heartbeat
	9,  // 54: pb.GleamMaster.SendFlowExecutionStatus:input_type -> pb.FlowExecutionStatus
	14, // 55: pb.GleamExecutor.CollectExecutionStatistics:input_type -> pb.ExecutionStat
	10, // 56: pb.GleamAgent.SendFileResource:input_type -> pb.FileResourceRequest
	12, // 57: pb.GleamAgent.Execute:input_type -> pb.ExecutionRequest
	14, // 58: pb.GleamAgent.CollectExecutionStatistics:input_type -> pb.ExecutionStat
	17, // 59: pb.GleamAgent.Delete:input_type -> pb.DeleteDatasetShardRequest
	19, // 60: pb.GleamAgent.Cleanup:input_type -> pb.CleanupRequest
	5,  // 61: pb.GleamMaster.GetResources:output_type -> pb.AllocationResult
	7,  // 62: pb.GleamMaster.SendHeartbeat:output_type -> pb.Empty
	7,  // 63: pb.GleamMaster.SendFlowExecutionStatus:output_type -> pb.Empty
	7,  // 64: pb.GleamExecutor.CollectExecutionStatistics:output_type -> pb.Empty
	11, // 65: pb.GleamAgent.SendFileResource:output_type -> pb.FileResourceResponse
	13, // 66: pb.GleamAgent.Execute:output_type -> pb.ExecutionResponse
	7,  // 67: pb.GleamAgent.CollectExecutionStatistics:output_type -> pb.Empty
	18, // 68: pb.GleamAgent.Delete:output_type -> pb.DeleteDatasetShardResponse
	20, // 69: pb.GleamAgent.Cleanup:output_type -> pb.CleanupResponse
	61, // [61:70] is the sub-list for method output_type
	52, // [52:61] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_gleam_proto_init() }
func file_gleam_proto_init() {
	if File_gleam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gleam_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Allocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowExecutionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstructionStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDatasetShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDatasetShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstructionSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetShard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetShardLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowExecutionStatus_Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowExecutionStatus_Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowExecutionStatus_Dataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowExecutionStatus_DatasetShard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowExecutionStatus_StepGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowExecutionStatus_TaskGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowExecutionStatus_DriverInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowExecutionStatus_TaskGroup_Execution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_Select); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_JoinPartitionedSorted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_CoGroupPartitionedSorted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_PipeAsArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_ScatterPartitions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_CollectPartitions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_InputSplitReader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_RoundRobin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_LocalTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_Broadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_LocalHashAndJoinWith); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_Script); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_LocalSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_MergeSortedTo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_MergeTo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_LocalDistinct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_LocalLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_LocalGroupBySorted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gleam_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction_Union); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gleam_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_gleam_proto_goTypes,
		DependencyIndexes: file_gleam_proto_depIdxs,
		MessageInfos:      file_gleam_proto_msgTypes,
	}.Build()
	File_gleam_proto = out.File
	file_gleam_proto_rawDesc = nil
	file_gleam_proto_goTypes = nil
	file_gleam_proto_depIdxs = nil
}
